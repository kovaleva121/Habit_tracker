services:
  web:
    image: ${DOCKER_HUB_USERNAME}/myapp:latest
    command: bash -c "python manage.py migrate && python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - static_volume:/code/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy


  db:
    image: postgres:17.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 3s
      timeout: 3s
      retries: 3
    ports:
      - "5432:5432"
  redis:
    image: redis:8-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 3s
      retries: 3

  celery:
    image: ${DOCKER_HUB_USERNAME}/myapp:latest
    command: celery -A config worker --loglevel=info
    env_file: ./.env
    depends_on:
      web:
        condition: service_started


  celery-beat:
    image: ${DOCKER_HUB_USERNAME}/myapp:latest
    command: celery -A config beat --loglevel=info
    env_file:
      - ./.env
    depends_on:
      web:
        condition: service_started


  nginx:
    image: nginx:1.28-alpine
    ports:
      - "8080:80"
    depends_on:
      web:
        condition: service_started
    volumes:
      - static_volume:/var/www/static/:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro




volumes:
  postgres_data:
  redis_data:
  static_volume:
